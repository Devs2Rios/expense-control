{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Chart/ChartBar/ChartBar.js","components/Chart/Chart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","d","uiStyle","Map","display","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","addExpenseUI","setAddExpenseUI","newEventUIHandler","e","prevState","style","get","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","getTime","getTimezoneOffset","toISOString","split","replace","onClick","id","NewExpense","enteredExpenseData","Math","random","toString","onAddExpense","ExpenseDate","month","toLocaleString","day","year","getFullYear","Card","classes","children","ExpenseItem","setTitle","ChartBar","shortMonth","Intl","DateTimeFormat","format","width","borderRadius","backgroundColor","position","transform","percent","height","Chart","months","Array","from","length","_","i","selectYear","years","map","padStart","itemsPerMonth","items","filter","item","getMonth","reduce","acc","fitem","total","Expenses","handleYear","expensesInit","App","getYears","arr","Set","el","itemsByYear","y","updateTotal","expenses","setExpenses","setYears","yearFilter","setYearFilter","setItems","setTotal","expense","Number","push","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.17c04a59.chunk.js","sourcesContent":["import { useState } from 'react';\n\nimport './ExpenseForm.css';\n\nexport default function ExpenseForm(props) {\n  // Util\n  const dateLocal = d =>\n      new Date(d.getTime() - d.getTimezoneOffset() * 60000)\n        .toISOString()\n        .split('T')[0]\n        .replace(/\\//g, '-'),\n    uiStyle = new Map([\n      [true, { display: 'none' }],\n      [false, { display: 'block' }],\n    ]);\n  // State\n  const [enteredTitle, setEnteredTitle] = useState(''),\n    [enteredAmount, setEnteredAmount] = useState(''),\n    [enteredDate, setEnteredDate] = useState(''),\n    [addExpenseUI, setAddExpenseUI] = useState(true);\n  // Events\n  const titleChangeHandler = event => {\n      setEnteredTitle(event.target.value);\n    },\n    amountChangeHandler = event => {\n      setEnteredAmount(event.target.value);\n    },\n    dateChangeHandler = event => {\n      setEnteredDate(event.target.value);\n    },\n    submitHandler = event => {\n      event.preventDefault();\n      if (enteredTitle && enteredAmount && enteredDate) {\n        const expenseData = {\n          title: enteredTitle,\n          amount: enteredAmount,\n          date: new Date(enteredDate),\n        };\n        props.onSaveExpenseData(expenseData);\n        setEnteredTitle('');\n        setEnteredAmount('');\n        setEnteredDate('');\n      }\n    },\n    newEventUIHandler = e => {\n      setAddExpenseUI(prevState => !prevState);\n    };\n  // Component\n  return (\n    <div>\n      <form style={uiStyle.get(addExpenseUI)} onSubmit={submitHandler}>\n        <div className='new-expense__controls'>\n          <div className='new-expense__control'>\n            <label>Title</label>\n            <input\n              type='text'\n              value={enteredTitle}\n              onChange={titleChangeHandler}\n            />\n          </div>\n          <div className='new-expense__control'>\n            <label>Amount</label>\n            <input\n              type='number'\n              min='0.01'\n              step='0.01'\n              value={enteredAmount}\n              onChange={amountChangeHandler}\n            />\n          </div>\n          <div className='new-expense__control'>\n            <label>Date</label>\n            <input\n              type='date'\n              min='2000-01-01'\n              max={dateLocal(new Date())}\n              value={enteredDate}\n              onChange={dateChangeHandler}\n            />\n          </div>\n        </div>\n        <div className='new-expense__buttons'>\n          <div className='new-expense__actions'>\n            <button\n              onClick={newEventUIHandler}\n              id='cancel-new-expense-button'\n              type='cancel'\n            >\n              Cancel\n            </button>\n          </div>\n          <div className='new-expense__actions'>\n            <button type='submit'>Add Expense</button>\n          </div>\n        </div>\n      </form>\n      <div className='new-expense__open-ui'>\n        <button\n          className='add-ui-btn'\n          style={uiStyle.get(!addExpenseUI)}\n          onClick={newEventUIHandler}\n        >\n          Add New Expense\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport ExpenseForm from './ExpenseForm';\nimport './NewExpense.css';\n\nconst NewExpense = (props) => {\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString()\n    };\n    props.onAddExpense(expenseData);\n  };\n\n  return (\n    <div className='new-expense'>\n      <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} />\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import React from 'react';\n\nimport './ExpenseDate.css';\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className='expense-date'>\n      <div className='expense-date__month'>{month}</div>\n      <div className='expense-date__year'>{year}</div>\n      <div className='expense-date__day'>{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = (props) => {\n  const classes = 'card ' + props.className;\n\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import React, { useState } from 'react';\n\nimport ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card';\nimport './ExpenseItem.css';\n\nconst ExpenseItem = props => {\n  // function clickHandler() {}\n  const [title, setTitle] = useState(props.title);\n\n  const clickHandler = () => {\n    setTitle('Updated!');\n  };\n\n  return (\n    <Card className='expense-item'>\n      <ExpenseDate date={props.date} />\n      <div className='expense-item__description'>\n        <h2>{title}</h2>\n        <div className='expense-item__price'>${props.amount}</div>\n      </div>\n      <button onClick={clickHandler}>Change Title</button>\n    </Card>\n  );\n};\n\nexport default ExpenseItem;\n","import './ChartBar.css';\n\nexport default function ChartBar(props) {\n  // Month label\n  const shortMonth = new Intl.DateTimeFormat('us', { month: 'short' }).format(\n    new Date(new Date().getFullYear(), props.month, 1)\n  );\n  // Component\n  return (\n    <div className='chart-bar'>\n      <div className='bar' />\n      <span\n        style={{\n          width: '1rem',\n          borderRadius: '2px',\n          backgroundColor: '#5f2fff',\n          position: 'absolute',\n          transform: `translate(0, ${6 * (1 - props.percent)}rem)`,\n          height: `${6 * props.percent}rem`,\n        }}\n      />\n      <p className='month'>{shortMonth}</p>\n    </div>\n  );\n}\n","import './Chart.css';\nimport ChartBar from './ChartBar/ChartBar';\n\nexport default function Chart(props) {\n  const months = Array.from({ length: 12 }, (_, i) => i);\n  return (\n    <div className='chart'>\n      <div className='chart-el header'>\n        <p>Filter by year:</p>\n        <select id='years' onChange={props.selectYear}>\n          {['All', ...props.years].map((year, i) => (\n            <option key={`year${`${i}`.padStart(3, 0)}`} value={year}>\n              {year}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div className='chart-el months'>\n        {months.map(month => {\n          const itemsPerMonth = props.items.filter(\n            item => new Date(item.date).getMonth() === month\n          );\n          return (\n            <ChartBar\n              id={`month${month}`}\n              key={month}\n              month={month}\n              percent={\n                itemsPerMonth.length > 0\n                  ? itemsPerMonth.reduce(\n                      (acc, fitem) => acc + fitem.amount,\n                      0\n                    ) / props.total\n                  : 0\n              }\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","import ExpenseItem from './ExpenseItem';\nimport Card from '../UI/Card';\nimport Chart from '../Chart/Chart';\nimport './Expenses.css';\n\nexport default function Expenses(props) {\n  return (\n    <Card className='expenses'>\n      <Chart\n        years={props.years}\n        year={props.year}\n        total={props.total}\n        items={props.items}\n        selectYear={props.handleYear}\n      />\n      {props.items.map(item => (\n        <ExpenseItem\n          key={item.id}\n          title={item.title}\n          amount={item.amount}\n          date={item.date}\n        />\n      ))}\n    </Card>\n  );\n}\n","import { useState } from 'react';\n\nimport NewExpense from './components/NewExpense/NewExpense';\nimport Expenses from './components/Expenses/Expenses';\n\n// Dummy Data\nconst expensesInit = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  {\n    id: 'e2',\n    title: 'New TV',\n    amount: 799.49,\n    date: new Date(2021, 2, 12),\n  },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nexport default function App() {\n  // Util\n  const getYears = arr => [...new Set(arr.map(el => el.date.getFullYear()))],\n    itemsByYear = (arr, y) =>\n      y !== 'All' ? arr.filter(item => item.date.getFullYear() === y) : arr,\n    updateTotal = arr => arr.reduce((acc, item) => acc + item.amount, 0);\n\n  // State\n  const [expenses, setExpenses] = useState(expensesInit),\n    [years, setYears] = useState(getYears(expenses)),\n    [yearFilter, setYearFilter] = useState('All'),\n    [items, setItems] = useState(itemsByYear([...expenses], yearFilter)),\n    [total, setTotal] = useState(updateTotal(items));\n\n  // Handlers\n  const handleYear = e => {\n      const year =\n        e.target.value !== 'All' ? Number(e.target.value) : e.target.value;\n      setYearFilter(year);\n      setItems(itemsByYear([...expenses], year));\n      setTotal(updateTotal(itemsByYear([...expenses], year)));\n    },\n    addExpenseHandler = expense => {\n      expense.id = `e${expenses.length + 1}`;\n      expense.amount = Number(expense.amount);\n      expenses.push(expense);\n      // Updated outside because other states depending on it are updated here as well\n      // If it would be alone it might use:\n      // setExpenses(prevExpenses => [expense, ...prevExpenses]);\n      setExpenses(expenses);\n      setItems(itemsByYear([...expenses], yearFilter));\n      setYears(getYears(expenses));\n      setTotal(updateTotal(itemsByYear([...expenses], yearFilter)));\n    };\n  // Component\n  return (\n    <div className='App'>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses\n        items={items}\n        years={years}\n        year={yearFilter}\n        total={total}\n        handleYear={handleYear}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}