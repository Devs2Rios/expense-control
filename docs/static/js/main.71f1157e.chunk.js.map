{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Chart/ChartBar/ChartBar.js","components/Chart/Chart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","required","min","step","max","NewExpense","enteredExpenseData","id","Math","random","toString","onAddExpense","ExpenseDate","month","toLocaleString","day","year","getFullYear","Card","classes","children","ExpenseItem","setTitle","onClick","ChartBar","shortMonth","Intl","DateTimeFormat","format","style","width","borderRadius","backgroundColor","position","transform","percent","height","Chart","months","Array","from","length","_","i","selectYear","years","map","padStart","itemsPerMonth","items","filter","item","getMonth","reduce","acc","fitem","total","Expenses","handleYear","App","expensesInit","getYears","arr","Set","el","itemsByYear","y","updateTotal","expenses","setExpenses","setYears","yearFilter","setYearFilter","setItems","setTotal","expense","Number","push","e","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.71f1157e.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport './ExpenseForm.css';\n\nconst ExpenseForm = props => {\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState('');\n  // const [userInput, setUserInput] = useState({\n  //   enteredTitle: '',\n  //   enteredAmount: '',\n  //   enteredDate: '',\n  // });\n\n  const titleChangeHandler = event => {\n    setEnteredTitle(event.target.value);\n  };\n\n  const amountChangeHandler = event => {\n    setEnteredAmount(event.target.value);\n  };\n\n  const dateChangeHandler = event => {\n    setEnteredDate(event.target.value);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate),\n    };\n\n    props.onSaveExpenseData(expenseData);\n    setEnteredTitle('');\n    setEnteredAmount('');\n    setEnteredDate('');\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className='new-expense__controls'>\n        <div className='new-expense__control'>\n          <label>Title</label>\n          <input\n            type='text'\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n            required\n          />\n        </div>\n        <div className='new-expense__control'>\n          <label>Amount</label>\n          <input\n            type='number'\n            min='0.01'\n            step='0.01'\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n            required\n          />\n        </div>\n        <div className='new-expense__control'>\n          <label>Date</label>\n          <input\n            type='date'\n            min='2019-01-01'\n            max='2022-12-31'\n            value={enteredDate}\n            onChange={dateChangeHandler}\n            required\n          />\n        </div>\n      </div>\n      <div className='new-expense__actions'>\n        <button type='submit'>Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React from 'react';\n\nimport ExpenseForm from './ExpenseForm';\nimport './NewExpense.css';\n\nconst NewExpense = (props) => {\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString()\n    };\n    props.onAddExpense(expenseData);\n  };\n\n  return (\n    <div className='new-expense'>\n      <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} />\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import React from 'react';\n\nimport './ExpenseDate.css';\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className='expense-date'>\n      <div className='expense-date__month'>{month}</div>\n      <div className='expense-date__year'>{year}</div>\n      <div className='expense-date__day'>{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = (props) => {\n  const classes = 'card ' + props.className;\n\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import React, { useState } from 'react';\n\nimport ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card';\nimport './ExpenseItem.css';\n\nconst ExpenseItem = props => {\n  // function clickHandler() {}\n  const [title, setTitle] = useState(props.title);\n\n  const clickHandler = () => {\n    setTitle('Updated!');\n  };\n\n  return (\n    <Card className='expense-item'>\n      <ExpenseDate date={props.date} />\n      <div className='expense-item__description'>\n        <h2>{title}</h2>\n        <div className='expense-item__price'>${props.amount}</div>\n      </div>\n      <button onClick={clickHandler}>Change Title</button>\n    </Card>\n  );\n};\n\nexport default ExpenseItem;\n","import './ChartBar.css';\n\nexport default function ChartBar(props) {\n  // Month label\n  const shortMonth = new Intl.DateTimeFormat('us', { month: 'short' }).format(\n    new Date(new Date().getFullYear(), props.month, 1)\n  );\n  // Component\n  return (\n    <div className='chart-bar'>\n      <div className='bar' />\n      <span\n        style={{\n          width: '1rem',\n          borderRadius: '2px',\n          backgroundColor: '#5f2fff',\n          position: 'absolute',\n          transform: `translate(0, ${6 * (1 - props.percent)}rem)`,\n          height: `${6 * props.percent}rem`,\n        }}\n      />\n      <p className='month'>{shortMonth}</p>\n    </div>\n  );\n}\n","import './Chart.css';\nimport ChartBar from './ChartBar/ChartBar';\n\nexport default function Chart(props) {\n  const months = Array.from({ length: 12 }, (_, i) => i);\n  return (\n    <div className='chart'>\n      <div className='chart-el header'>\n        <p>Filter by year:</p>\n        <select id='years' onChange={props.selectYear}>\n          {['All', ...props.years].map((year, i) => (\n            <option key={`year${`${i}`.padStart(3, 0)}`} value={year}>\n              {year}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div className='chart-el months'>\n        {months.map(month => {\n          const itemsPerMonth = props.items.filter(\n            item => new Date(item.date).getMonth() === month\n          );\n          return (\n            <ChartBar\n              id={`month${month}`}\n              key={month}\n              month={month}\n              percent={\n                itemsPerMonth.length > 0\n                  ? itemsPerMonth.reduce(\n                      (acc, fitem) => acc + fitem.amount,\n                      0\n                    ) / props.total\n                  : 0\n              }\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","import ExpenseItem from './ExpenseItem';\nimport Card from '../UI/Card';\nimport Chart from '../Chart/Chart';\nimport './Expenses.css';\n\nexport default function Expenses(props) {\n  return (\n    <Card className='expenses'>\n      <Chart\n        years={props.years}\n        year={props.year}\n        total={props.total}\n        items={props.items}\n        selectYear={props.handleYear}\n      />\n      {props.items.map(item => (\n        <ExpenseItem\n          key={item.id}\n          title={item.title}\n          amount={item.amount}\n          date={item.date}\n        />\n      ))}\n    </Card>\n  );\n}\n","import { useState } from 'react';\n\nimport NewExpense from './components/NewExpense/NewExpense';\nimport Expenses from './components/Expenses/Expenses';\n\nexport default function App() {\n  const expensesInit = [\n    {\n      id: 'e1',\n      title: 'Toilet Paper',\n      amount: 94.12,\n      date: new Date(2020, 7, 14),\n    },\n    {\n      id: 'e2',\n      title: 'New TV',\n      amount: 799.49,\n      date: new Date(2021, 2, 12),\n    },\n    {\n      id: 'e3',\n      title: 'Car Insurance',\n      amount: 294.67,\n      date: new Date(2021, 2, 28),\n    },\n    {\n      id: 'e4',\n      title: 'New Desk (Wooden)',\n      amount: 450,\n      date: new Date(2021, 5, 12),\n    },\n  ];\n\n  // Util\n  const getYears = arr => [...new Set(arr.map(el => el.date.getFullYear()))],\n    itemsByYear = (arr, y) =>\n      y !== 'All' ? arr.filter(item => item.date.getFullYear() === y) : arr,\n    updateTotal = arr => arr.reduce((acc, item) => acc + item.amount, 0);\n\n  // State\n  const [expenses, setExpenses] = useState(expensesInit),\n    [years, setYears] = useState(getYears(expenses)),\n    [yearFilter, setYearFilter] = useState('All'),\n    [items, setItems] = useState(itemsByYear([...expenses], yearFilter)),\n    [total, setTotal] = useState(updateTotal(items));\n\n  // Handlers\n  const handleYear = e => {\n      const year =\n        e.target.value !== 'All' ? Number(e.target.value) : e.target.value;\n      setYearFilter(year);\n      setItems(itemsByYear([...expenses], year));\n      setTotal(updateTotal(itemsByYear([...expenses], year)));\n    },\n    addExpenseHandler = expense => {\n      expense.id = `e${expenses.length + 1}`;\n      expense.amount = Number(expense.amount);\n      expenses.push(expense);\n      setExpenses(expenses);\n      setItems(itemsByYear([...expenses], yearFilter));\n      setYears(getYears(expenses));\n    };\n  // Component\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses\n        items={items}\n        years={years}\n        year={yearFilter}\n        total={total}\n        handleYear={handleYear}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}