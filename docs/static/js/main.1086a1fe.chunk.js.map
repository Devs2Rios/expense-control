{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Chart/ChartBar/ChartBar.js","components/Chart/Chart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","d","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","required","min","step","max","getTime","getTimezoneOffset","toISOString","split","replace","NewExpense","enteredExpenseData","id","Math","random","toString","onAddExpense","ExpenseDate","month","toLocaleString","day","year","getFullYear","Card","classes","children","ExpenseItem","setTitle","onClick","ChartBar","shortMonth","Intl","DateTimeFormat","format","style","width","borderRadius","backgroundColor","position","transform","percent","height","Chart","months","Array","from","length","_","i","selectYear","years","map","padStart","itemsPerMonth","items","filter","item","getMonth","reduce","acc","fitem","total","Expenses","handleYear","expensesInit","App","getYears","arr","Set","el","itemsByYear","y","updateTotal","expenses","setExpenses","setYears","yearFilter","setYearFilter","setItems","setTotal","expense","Number","push","e","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.1086a1fe.chunk.js","sourcesContent":["import { useState } from 'react';\n\nimport './ExpenseForm.css';\n\nexport default function ExpenseForm(props) {\n  // Util\n  const dateLocal = d =>\n    new Date(d.getTime() - d.getTimezoneOffset() * 60000)\n      .toISOString()\n      .split('T')[0]\n      .replace(/\\//g, '-');\n  // State\n  const [enteredTitle, setEnteredTitle] = useState(''),\n    [enteredAmount, setEnteredAmount] = useState(''),\n    [enteredDate, setEnteredDate] = useState('');\n  // Events\n  const titleChangeHandler = event => {\n      setEnteredTitle(event.target.value);\n    },\n    amountChangeHandler = event => {\n      setEnteredAmount(event.target.value);\n    },\n    dateChangeHandler = event => {\n      setEnteredDate(event.target.value);\n    },\n    submitHandler = event => {\n      event.preventDefault();\n\n      const expenseData = {\n        title: enteredTitle,\n        amount: enteredAmount,\n        date: new Date(enteredDate),\n      };\n\n      props.onSaveExpenseData(expenseData);\n      setEnteredTitle('');\n      setEnteredAmount('');\n      setEnteredDate('');\n    };\n  // Component\n  return (\n    <form onSubmit={submitHandler}>\n      <div className='new-expense__controls'>\n        <div className='new-expense__control'>\n          <label>Title</label>\n          <input\n            type='text'\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n            required\n          />\n        </div>\n        <div className='new-expense__control'>\n          <label>Amount</label>\n          <input\n            type='number'\n            min='0.01'\n            step='0.01'\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n            required\n          />\n        </div>\n        <div className='new-expense__control'>\n          <label>Date</label>\n          <input\n            type='date'\n            min='2000-01-01'\n            max={dateLocal(new Date())}\n            value={enteredDate}\n            onChange={dateChangeHandler}\n            required\n          />\n        </div>\n      </div>\n      <div className='new-expense__actions'>\n        <button type='submit'>Add Expense</button>\n      </div>\n    </form>\n  );\n}\n","import React from 'react';\n\nimport ExpenseForm from './ExpenseForm';\nimport './NewExpense.css';\n\nconst NewExpense = (props) => {\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString()\n    };\n    props.onAddExpense(expenseData);\n  };\n\n  return (\n    <div className='new-expense'>\n      <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} />\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import React from 'react';\n\nimport './ExpenseDate.css';\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className='expense-date'>\n      <div className='expense-date__month'>{month}</div>\n      <div className='expense-date__year'>{year}</div>\n      <div className='expense-date__day'>{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = (props) => {\n  const classes = 'card ' + props.className;\n\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import React, { useState } from 'react';\n\nimport ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card';\nimport './ExpenseItem.css';\n\nconst ExpenseItem = props => {\n  // function clickHandler() {}\n  const [title, setTitle] = useState(props.title);\n\n  const clickHandler = () => {\n    setTitle('Updated!');\n  };\n\n  return (\n    <Card className='expense-item'>\n      <ExpenseDate date={props.date} />\n      <div className='expense-item__description'>\n        <h2>{title}</h2>\n        <div className='expense-item__price'>${props.amount}</div>\n      </div>\n      <button onClick={clickHandler}>Change Title</button>\n    </Card>\n  );\n};\n\nexport default ExpenseItem;\n","import './ChartBar.css';\n\nexport default function ChartBar(props) {\n  // Month label\n  const shortMonth = new Intl.DateTimeFormat('us', { month: 'short' }).format(\n    new Date(new Date().getFullYear(), props.month, 1)\n  );\n  // Component\n  return (\n    <div className='chart-bar'>\n      <div className='bar' />\n      <span\n        style={{\n          width: '1rem',\n          borderRadius: '2px',\n          backgroundColor: '#5f2fff',\n          position: 'absolute',\n          transform: `translate(0, ${6 * (1 - props.percent)}rem)`,\n          height: `${6 * props.percent}rem`,\n        }}\n      />\n      <p className='month'>{shortMonth}</p>\n    </div>\n  );\n}\n","import './Chart.css';\nimport ChartBar from './ChartBar/ChartBar';\n\nexport default function Chart(props) {\n  const months = Array.from({ length: 12 }, (_, i) => i);\n  return (\n    <div className='chart'>\n      <div className='chart-el header'>\n        <p>Filter by year:</p>\n        <select id='years' onChange={props.selectYear}>\n          {['All', ...props.years].map((year, i) => (\n            <option key={`year${`${i}`.padStart(3, 0)}`} value={year}>\n              {year}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div className='chart-el months'>\n        {months.map(month => {\n          const itemsPerMonth = props.items.filter(\n            item => new Date(item.date).getMonth() === month\n          );\n          return (\n            <ChartBar\n              id={`month${month}`}\n              key={month}\n              month={month}\n              percent={\n                itemsPerMonth.length > 0\n                  ? itemsPerMonth.reduce(\n                      (acc, fitem) => acc + fitem.amount,\n                      0\n                    ) / props.total\n                  : 0\n              }\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","import ExpenseItem from './ExpenseItem';\nimport Card from '../UI/Card';\nimport Chart from '../Chart/Chart';\nimport './Expenses.css';\n\nexport default function Expenses(props) {\n  return (\n    <Card className='expenses'>\n      <Chart\n        years={props.years}\n        year={props.year}\n        total={props.total}\n        items={props.items}\n        selectYear={props.handleYear}\n      />\n      {props.items.map(item => (\n        <ExpenseItem\n          key={item.id}\n          title={item.title}\n          amount={item.amount}\n          date={item.date}\n        />\n      ))}\n    </Card>\n  );\n}\n","import { useState } from 'react';\n\nimport NewExpense from './components/NewExpense/NewExpense';\nimport Expenses from './components/Expenses/Expenses';\n\n// Dummy Data\nconst expensesInit = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  {\n    id: 'e2',\n    title: 'New TV',\n    amount: 799.49,\n    date: new Date(2021, 2, 12),\n  },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nexport default function App() {\n  // Util\n  const getYears = arr => [...new Set(arr.map(el => el.date.getFullYear()))],\n    itemsByYear = (arr, y) =>\n      y !== 'All' ? arr.filter(item => item.date.getFullYear() === y) : arr,\n    updateTotal = arr => arr.reduce((acc, item) => acc + item.amount, 0);\n\n  // State\n  const [expenses, setExpenses] = useState(expensesInit),\n    [years, setYears] = useState(getYears(expenses)),\n    [yearFilter, setYearFilter] = useState('All'),\n    [items, setItems] = useState(itemsByYear([...expenses], yearFilter)),\n    [total, setTotal] = useState(updateTotal(items));\n\n  // Handlers\n  const handleYear = e => {\n      const year =\n        e.target.value !== 'All' ? Number(e.target.value) : e.target.value;\n      setYearFilter(year);\n      setItems(itemsByYear([...expenses], year));\n      setTotal(updateTotal(itemsByYear([...expenses], year)));\n    },\n    addExpenseHandler = expense => {\n      expense.id = `e${expenses.length + 1}`;\n      expense.amount = Number(expense.amount);\n      expenses.push(expense);\n      // Updated outside because other states depending on it are updated here as well\n      // If it would be alone it might use:\n      // setExpenses(prevExpenses => [expense, ...prevExpenses]);\n      setExpenses(expenses);\n      setItems(itemsByYear([...expenses], yearFilter));\n      setYears(getYears(expenses));\n      setTotal(updateTotal(itemsByYear([...expenses], yearFilter)));\n    };\n  // Component\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses\n        items={items}\n        years={years}\n        year={yearFilter}\n        total={total}\n        handleYear={handleYear}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}